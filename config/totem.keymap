//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

/ {
    combos {
        compatible = "zmk,combos";

        bt {
            bindings = <&bt BT_CLR>;
            key-positions = <3 4>;
        };

        btnzt {
            bindings = <&bt BT_NXT>;
            key-positions = <14 13>;
        };

        bt-clearall {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <2 3 4>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <22 23>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <22 24>;
        };

        caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <13 16>;
        };
    };

    macros {
        gif: gif {
            label = "giphy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N2>,
                <&macro_release>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp G &kp I &kp F>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     F     ┃     P     ┃     G     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     ;     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     R     ┃     S     ┃     T     ┃     D     ┃   ┃     H     ┃     N     ┃     E     ┃     I     ┃     O     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     Q     ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     K     ┃     M     ┃     ,     ┃     .     ┃     /     ┃     \     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃    TAB    ┃    SPC    ┃   ┃   ENTER   ┃           ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
              &kp Q  &kp W  &kp E          &kp R         &kp T          &kp Y            &kp U          &kp I        &kp O    &kp P
              &kp A  &kp S  &mt LCTRL D    &mt LSHFT F   &mt LA(G) G    &mt RIGHT_ALT H  &mt RSHFT J    &mt RCTRL K  &kp L    &kp SEMI
&lt 1 ESCAPE  &kp Z  &kp X  &kp C          &kp V         &kp B          &kp N            &kp M          &kp COMMA    &kp DOT  &kp FSLH  &lt 1 ENTER
                            &lt 4 AT_SIGN  &kp LEFT_GUI  &lt 2 TAB      &kp SPACE        &kp BACKSPACE  &kp ENTER
            >;
        };

        N_layer {
            bindings = <
        &kp LS(EXCL)  &kp LS(AT)     &kp LS(POUND)  &kp LS(LPAR)  &kp LS(RPAR)    &kp N7   &kp N8    &kp N9     &kp N0        &kp LS(PRCNT)
        &kp LS(DLLR)  &kp LS(CARET)  &kp LS(AMPS)   &kp LS(LBRC)  &kp LS(RBRC)    &kp N4   &kp N5    &kp N6     &kp LS(PLUS)  &kp LS(STAR)
&trans  &kp LS(PIPE)  &kp LS(TILDE)  &kp LS(DQT)    &kp LBKT      &kp RBKT        &kp N1   &kp N2    &kp N3     &kp MINUS     &kp FSLH       &kp EQUAL
                                     &trans         &trans        &trans          &kp DOT  &kp BSPC  &kp EQUAL
            >;
        };

        F_layer {
            bindings = <
        &kp F1  &kp F2     &kp F4     &kp F5     &kp F6      &kp F8    &kp F9     &kp F10    &kp F11    &kp F12
        &trans  &trans     &kp LCTRL  &kp LSHFT  &kp LALT    &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &kp PRINTSCREEN
&trans  &trans  &kp GRAVE  &kp APOS   &trans     &trans      &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &kp BSLH         &trans
                           &trans     &trans     &trans      &trans    &kp DEL    &trans
            >;
        };

        mod_layer {
            bindings = <
        &trans  &trans  &kp K_MUTE  &kp C_VOL_DN  &kp C_VOLUME_UP    &trans         &trans           &trans             &trans  &trans
        &trans  &trans  &trans      &trans        &trans             &kp RIGHT_ALT  &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &trans  &trans
&trans  &trans  &trans  &trans      &trans        &trans             &trans         &trans           &trans             &trans  &trans  &trans
                        &trans      &trans        &trans             &trans         &trans           &trans
            >;
        };

        Game_layer {
            label = "GAME";
            bindings = <
         &kp Q  &kp W  &kp E         &kp R             &kp T             &kp Y      &kp U          &kp I        &kp O    &kp P
         &kp A  &kp S  &kp D         &kp F             &kp G             &kp H      &kp J          &kp K        &kp L    &kp SEMI
&kp ESC  &kp Z  &kp X  &kp C         &kp V             &kp B             &kp N      &kp M          &kp COMMA    &kp DOT  &kp FSLH  &to 0
                       &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT    &kp SPACE  &kp BACKSPACE  &lt 0 ENTER
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
    };
};
